/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        activate_config_layer {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods - Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            retro-tap;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 3 36 37 38 39 40 41>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods - Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W                 &kp E                 &kp R             &kp T        &kp Y    &kp U             &kp I             &kp O                 &kp P     &kp BSPC
&kp TAB    &kp A  &hrml LEFT_CONTROL S  &hrml LEFT_ALT D      &hrml LEFT_GUI F  &kp G        &kp H    &hrmr LEFT_GUI J  &hrmr LEFT_ALT K  &hrmr LEFT_CONTROL L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X                 &kp C                 &kp V             &kp B        &kp N    &kp M             &kp COMMA         &kp DOT               &kp FSLH  &kp BACKSLASH
                                        &kp LS(LA(LC(LGUI)))  &mo 2             &kp SPACE    &kp RET  &mo 1             &kp LEFT_SHIFT
            >;

            label = "HOME";
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp EXCL   &kp AT          &kp HASH              &kp DLLR        &kp PRCNT        &kp CARET         &kp AMPS         &kp ASTERISK       &kp LPAR   &kp RPAR      &kp DELETE
&kp TAB     &kp GRAVE  &kp MINUS       &kp LEFT_BRACKET      &kp LEFT_BRACE  &kp LESS_THAN    &kp GREATER_THAN  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp PLUS   &kp COLON     &kp DOUBLE_QUOTES
&caps_word  &kp TILDE  &kp UNDERSCORE  &trans                &trans          &trans           &trans            &trans           &trans             &kp EQUAL  &kp QUESTION  &kp PIPE
                                       &kp LS(LA(LC(LGUI)))  &trans          &kp SPACE        &kp RET           &trans           &caps_word
            >;

            label = "SYM";
        };

        navigation_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3                &kp N4  &kp N5       &kp N6   &kp N7    &kp N8       &kp N9         &kp N0     &kp DELETE
&kp TAB     &kp F1  &kp F2  &kp F3                &kp F4  &kp F5       &trans   &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &trans
&caps_word  &kp F6  &kp F7  &kp F8                &kp F9  &kp F10      &trans   &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &trans
                            &kp LS(LA(LC(LGUI)))  &trans  &kp SPACE    &kp RET  &trans    &caps_word
            >;

            label = "NAV";
        };

        config_layer {
            bindings = <
&sys_reset   &trans  &trans  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1    &kp C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp K_MUTE                &kp C_VOL_DN          &kp C_VOL_UP          &trans  &trans  &bootloader
&trans       &trans  &trans  &trans        &trans        &trans          &kp C_PREVIOUS            &kp C_PLAY_PAUSE      &kp C_NEXT            &trans  &trans  &trans
                             &to 0         &to 0         &to 0           &to 0                     &to 0                 &to 0
            >;

            label = "CONF";
        };
    };
};
