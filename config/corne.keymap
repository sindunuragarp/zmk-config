/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        activate_config_layer {
            bindings = <&to 5>;
            key-positions = <37 40>;
            layers = <0>;
        };

        activate_config_layer_left {
            bindings = <&to 5>;
            key-positions = <36 37 38>;
        };

        activate_config_layer_right {
            bindings = <&to 5>;
            key-positions = <39 40 41>;
        };

        toggle_qwerty {
            bindings = <&tog 1>;
            key-positions = <0 11>;
        };

        execute_homerow_app {
            bindings = <&kp LS(LG(SPACE))>;
            key-positions = <38 39>;
        };
    };

    behaviors {
        hrr_mod: hrr_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods - Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 3 36 37 38 39 40 41>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        hrl_mod: hrl_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods - Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        hrr_layer: hrr_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Layer - Right";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 3>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };

        hrl_layer: hrl_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Layer - Left";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        shift_comma: shift_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_COMMA";
            bindings = <&kp COMMA>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_dot: shift_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_DOT";
            bindings = <&kp PERIOD>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_slash: shift_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_SLASH";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_colon: shift_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_COLON";
            bindings = <&kp COLON>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        tap_shift: tap_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;
        };

        tap_symbol: tap_symbol {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_SYMBOL";
            #binding-cells = <0>;
            bindings = <&sl 2>, <&tog 2>;
        };

        tap_bracket_left: tap_bracket_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_BRACKET_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp LEFT_BRACKET>;
        };

        tap_bracket_right: tap_bracket_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_BRACKET_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACE>, <&kp RIGHT_BRACKET>;
        };
    };

    macros {
        username: username {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp S &kp I &kp N &kp D &kp U &kp N &kp U &kp R &kp A &kp G &kp A &kp R &kp P>;
            label = "USERNAME";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        home_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC     &kp Q           &kp W                    &kp F                           &kp P                &kp B                   &kp J        &kp L                &kp U                &kp Y                    &kp MINUS       &kp GRAVE
&kp TAB     &hrl_layer 2 A  &hrl_mod LEFT_CONTROL R  &hrl_mod LEFT_ALT S             &hrl_mod LEFT_GUI T  &kp G                   &kp M        &hrr_mod LEFT_GUI N  &hrr_mod LEFT_ALT E  &hrr_mod LEFT_CONTROL I  &hrr_layer 2 O  &kp APOSTROPHE
&tap_shift  &kp Z           &kp X                    &kp C                           &kp D                &kp V                   &kp K        &kp H                &shift_comma         &shift_dot               &shift_slash    &kp DOUBLE_QUOTES
                                                     &mt LS(LA(LC(LGUI))) LG(SPACE)  &lt 4 TAB            &mt LEFT_SHIFT SPACE    &lt 3 ENTER  &kp BACKSPACE        &kp DELETE
            >;

            label = "HOME";
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W             &kp E                &kp R                &kp T     &kp Y   &kp U                &kp I                &kp O             &kp P      &trans
&trans  &kp A  &hrl_mod LCTRL S  &hrl_mod LEFT_ALT D  &hrl_mod LEFT_GUI F  &kp G     &kp H   &hrr_mod LEFT_GUI J  &hrr_mod LEFT_ALT K  &hrr_mod LCTRL L  &kp MINUS  &trans
&trans  &kp Z  &kp X             &kp C                &kp V                &kp B     &kp N   &kp M                &trans               &trans            &trans     &trans
                                 &trans               &trans               &trans    &trans  &trans               &trans
            >;

            label = "QWERTY";
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none            &kp LESS_THAN         &kp GREATER_THAN        &kp AT_SIGN              &kp PERCENT    &kp AMPERSAND  &kp DOLLAR               &kp LEFT_BRACE                      &kp RIGHT_BRACE                   &none          &trans
&trans  &kp EXCLAMATION  &hrl_mod LCTRL MINUS  &hrl_mod LEFT_ALT PLUS  &hrl_mod LEFT_GUI EQUAL  &kp HASH       &kp PIPE       &hrr_mod LEFT_GUI COLON  &hrr_mod LEFT_ALT LEFT_PARENTHESIS  &hrr_mod LCTRL RIGHT_PARENTHESIS  &kp SEMICOLON  &trans
&trans  &none            &kp SLASH             &kp ASTERISK            &kp CARET                &none          &none          &kp PERIOD               &kp LEFT_BRACKET                    &kp RIGHT_BRACKET                 &none          &trans
                                               &trans                  &trans                   &trans         &trans         &trans                   &trans
            >;

            label = "SYM";
        };

        number_layer {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &none   &none         &none         &none      &none  &none
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &none   &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &none  &none
&trans  &none   &none   &none   &none   &none     &none   &none         &none         &none      &none  &none
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;

            label = "NUM";
        };

        navigation_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(GRAVE)   &kp F1     &kp F2     &kp F3     &kp F4     &kp F5       &kp PAGE_UP                &kp HOME       &kp UP        &kp END        &none  &kp LG(LA(RIGHT))
&kp LG(TAB)     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10      &kp PAGE_DOWN              &kp LEFT       &kp DOWN      &kp RIGHT      &none  &kp LG(LA(LEFT))
&kp LEFT_SHIFT  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(A)    &kp LS(LA(LC(LG(SPACE))))  &kp LC(LEFT)   &kp LC(DOWN)  &kp LC(RIGHT)  &none  &kp LG(LA(UP_ARROW))
                                      &trans     &trans     &trans       &kp TAB                    &kp BACKSPACE  &kp DELETE
            >;

            label = "NAV";
        };

        config_layer {
            bindings = <
&sys_reset   &none  &none  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_CLR      &kp C_PLAY_PAUSE  &kp C_PREV            &kp C_NEXT            &none  &none  &sys_reset
&none        &none  &none  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &kp C_MUTE        &kp C_VOL_DN          &kp C_VOL_UP          &none  &none  &none
&bootloader  &none  &none  &none         &kp LG(LC(Q))  &kp C_POWER     &none             &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none  &none  &bootloader
                           &tog 5        &tog 5         &tog 5          &tog 5            &tog 5                &tog 5
            >;

            label = "CONF";
        };
    };
};
